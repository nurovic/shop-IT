[{"/Users/nurovic/GitHub/shop-IT/frontend/src/index.js":"1","/Users/nurovic/GitHub/shop-IT/frontend/src/App.js":"2","/Users/nurovic/GitHub/shop-IT/frontend/src/store.js":"3","/Users/nurovic/GitHub/shop-IT/frontend/src/components/layout/Footer.js":"4","/Users/nurovic/GitHub/shop-IT/frontend/src/components/user/UpdatePassword.js":"5","/Users/nurovic/GitHub/shop-IT/frontend/src/components/layout/Header.js":"6","/Users/nurovic/GitHub/shop-IT/frontend/src/components/user/UpdateProfile.js":"7","/Users/nurovic/GitHub/shop-IT/frontend/src/components/user/Profile.js":"8","/Users/nurovic/GitHub/shop-IT/frontend/src/components/user/Register.js":"9","/Users/nurovic/GitHub/shop-IT/frontend/src/components/Home.js":"10","/Users/nurovic/GitHub/shop-IT/frontend/src/components/user/NewPassword.js":"11","/Users/nurovic/GitHub/shop-IT/frontend/src/components/order/ListOrders.js":"12","/Users/nurovic/GitHub/shop-IT/frontend/src/components/user/Login.js":"13","/Users/nurovic/GitHub/shop-IT/frontend/src/components/order/OrderDetails.js":"14","/Users/nurovic/GitHub/shop-IT/frontend/src/components/cart/Shipping.js":"15","/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/Dashboard.js":"16","/Users/nurovic/GitHub/shop-IT/frontend/src/components/cart/ConfirmOrder.js":"17","/Users/nurovic/GitHub/shop-IT/frontend/src/components/cart/OrderSuccess.js":"18","/Users/nurovic/GitHub/shop-IT/frontend/src/components/user/ForgotPassword.js":"19","/Users/nurovic/GitHub/shop-IT/frontend/src/components/cart/Cart.js":"20","/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/NewProduct.js":"21","/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/ProcessOrder.js":"22","/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/UpdateProduct.js":"23","/Users/nurovic/GitHub/shop-IT/frontend/src/components/cart/Payment.js":"24","/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/ProductsList.js":"25","/Users/nurovic/GitHub/shop-IT/frontend/src/components/route/ProtectedRoute.js":"26","/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/UpdateUser.js":"27","/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/UsersList.js":"28","/Users/nurovic/GitHub/shop-IT/frontend/src/reducers/productsReducers.js":"29","/Users/nurovic/GitHub/shop-IT/frontend/src/reducers/cartReducers.js":"30","/Users/nurovic/GitHub/shop-IT/frontend/src/reducers/userReducers.js":"31","/Users/nurovic/GitHub/shop-IT/frontend/src/reducers/orderReducers.js":"32","/Users/nurovic/GitHub/shop-IT/frontend/src/components/product/ProductDetails.js":"33","/Users/nurovic/GitHub/shop-IT/frontend/src/actions/userActions.js":"34","/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/OrdersList.js":"35","/Users/nurovic/GitHub/shop-IT/frontend/src/components/layout/MetaData.js":"36","/Users/nurovic/GitHub/shop-IT/frontend/src/components/layout/Loader.js":"37","/Users/nurovic/GitHub/shop-IT/frontend/src/components/product/product.js":"38","/Users/nurovic/GitHub/shop-IT/frontend/src/components/layout/Search.js":"39","/Users/nurovic/GitHub/shop-IT/frontend/src/actions/productsActions.js":"40","/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/Sidebar.js":"41","/Users/nurovic/GitHub/shop-IT/frontend/src/actions/cartActions.js":"42","/Users/nurovic/GitHub/shop-IT/frontend/src/components/cart/CheckoutSteps.js":"43","/Users/nurovic/GitHub/shop-IT/frontend/src/actions/orderActions.js":"44","/Users/nurovic/GitHub/shop-IT/frontend/src/constants/userConstants.js":"45","/Users/nurovic/GitHub/shop-IT/frontend/src/constants/orderConstans.js":"46","/Users/nurovic/GitHub/shop-IT/frontend/src/constants/productConstants.js":"47","/Users/nurovic/GitHub/shop-IT/frontend/src/constants/cartConstants.js":"48","/Users/nurovic/GitHub/shop-IT/frontend/src/components/review/ListReview.js":"49","/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/ProductReviews.js":"50"},{"size":588,"mtime":1654950226000,"results":"51","hashOfConfig":"52"},{"size":4845,"mtime":1656241750002,"results":"53","hashOfConfig":"52"},{"size":1723,"mtime":1656245375359,"results":"54","hashOfConfig":"52"},{"size":298,"mtime":1654950226000,"results":"55","hashOfConfig":"52"},{"size":3083,"mtime":1654950226000,"results":"56","hashOfConfig":"52"},{"size":2950,"mtime":1654950226000,"results":"57","hashOfConfig":"52"},{"size":5301,"mtime":1654950226000,"results":"58","hashOfConfig":"52"},{"size":1836,"mtime":1654950226000,"results":"59","hashOfConfig":"52"},{"size":4496,"mtime":1654950226000,"results":"60","hashOfConfig":"52"},{"size":5978,"mtime":1654950226000,"results":"61","hashOfConfig":"52"},{"size":3014,"mtime":1654950226000,"results":"62","hashOfConfig":"52"},{"size":2638,"mtime":1654950226000,"results":"63","hashOfConfig":"52"},{"size":3320,"mtime":1654950226000,"results":"64","hashOfConfig":"52"},{"size":3651,"mtime":1654950226000,"results":"65","hashOfConfig":"52"},{"size":3794,"mtime":1654950226000,"results":"66","hashOfConfig":"52"},{"size":4771,"mtime":1654950226000,"results":"67","hashOfConfig":"52"},{"size":3838,"mtime":1654950226000,"results":"68","hashOfConfig":"52"},{"size":678,"mtime":1654950226000,"results":"69","hashOfConfig":"52"},{"size":2238,"mtime":1654950226000,"results":"70","hashOfConfig":"52"},{"size":4269,"mtime":1654950226000,"results":"71","hashOfConfig":"52"},{"size":6444,"mtime":1654950226000,"results":"72","hashOfConfig":"52"},{"size":6277,"mtime":1654950226000,"results":"73","hashOfConfig":"52"},{"size":7671,"mtime":1654950226000,"results":"74","hashOfConfig":"52"},{"size":4827,"mtime":1654950226000,"results":"75","hashOfConfig":"52"},{"size":3805,"mtime":1654950226000,"results":"76","hashOfConfig":"52"},{"size":865,"mtime":1654950226000,"results":"77","hashOfConfig":"52"},{"size":4213,"mtime":1654950226000,"results":"78","hashOfConfig":"52"},{"size":3540,"mtime":1656237872943,"results":"79","hashOfConfig":"52"},{"size":6798,"mtime":1656243579284,"results":"80","hashOfConfig":"52"},{"size":1159,"mtime":1654950226000,"results":"81","hashOfConfig":"52"},{"size":5460,"mtime":1656237394733,"results":"82","hashOfConfig":"52"},{"size":4374,"mtime":1654950226000,"results":"83","hashOfConfig":"52"},{"size":9399,"mtime":1654950226000,"results":"84","hashOfConfig":"52"},{"size":7238,"mtime":1656243770784,"results":"85","hashOfConfig":"52"},{"size":3852,"mtime":1654950226000,"results":"86","hashOfConfig":"52"},{"size":214,"mtime":1654950226000,"results":"87","hashOfConfig":"52"},{"size":133,"mtime":1654950226000,"results":"88","hashOfConfig":"52"},{"size":1239,"mtime":1654950226000,"results":"89","hashOfConfig":"52"},{"size":880,"mtime":1654950226000,"results":"90","hashOfConfig":"52"},{"size":5845,"mtime":1656245335666,"results":"91","hashOfConfig":"52"},{"size":1638,"mtime":1654950226000,"results":"92","hashOfConfig":"52"},{"size":1134,"mtime":1654950226000,"results":"93","hashOfConfig":"52"},{"size":1871,"mtime":1654950226000,"results":"94","hashOfConfig":"52"},{"size":3663,"mtime":1654950226000,"results":"95","hashOfConfig":"52"},{"size":2213,"mtime":1656237194576,"results":"96","hashOfConfig":"52"},{"size":1160,"mtime":1654950226000,"results":"97","hashOfConfig":"52"},{"size":1890,"mtime":1656243051010,"results":"98","hashOfConfig":"52"},{"size":147,"mtime":1654950226000,"results":"99","hashOfConfig":"52"},{"size":758,"mtime":1654950226000,"results":"100","hashOfConfig":"52"},{"size":4981,"mtime":1656250555778,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"d42wu",{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"104"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"104"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nurovic/GitHub/shop-IT/frontend/src/index.js",[],["213","214"],"/Users/nurovic/GitHub/shop-IT/frontend/src/App.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/store.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/layout/Footer.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/user/UpdatePassword.js",["215"],"import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updatePassword, clearErrors, loadUser } from \"../../actions/userActions\";\r\nimport { UPDATE_PASSWORD_RESET } from \"../../constants/userConstants\";\r\n\r\nconst UpdatePassword = ({ history }) => {\r\n    \r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated) {\r\n            alert.success('Password updated successfully')\r\n\r\n            history.push('/me')\r\n            \r\n            dispatch({\r\n                type: UPDATE_PASSWORD_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n      const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        const formData = new FormData()\r\n        formData.set('oldPassword', oldPassword)\r\n        formData.set('password', password)\r\n\r\n        dispatch(updatePassword(formData))\r\n    }\r\n  return (\r\n    <Fragment>\r\n        <MetaData title={'Change Password'} />\r\n        \t\t<div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"old_password_field\">Old Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"old_password_field\"\r\n                                className=\"form-control\"\r\n                                value={oldPassword}\r\n                                onChange={(e) => setOldPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"new_password_field\">New Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"new_password_field\"\r\n                                className=\"form-control\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" \r\n                        disabled={loading ? true : false}\r\n                        >Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UpdatePassword","/Users/nurovic/GitHub/shop-IT/frontend/src/components/layout/Header.js",["216"],"import React, { Fragment } from \"react\";\nimport { Link, Route } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useAlert } from \"react-alert\";\nimport { logout } from \"../../actions/userActions\";\n\nimport Search from \"./Search\";\n\nimport \"../../App.css\";\n\nconst Header = () => {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { user, loading } = useSelector((state) => state.auth);\n  const { cartItems } = useSelector((state) => state.cart);\n  const logoutHandler = () => {\n    dispatch(logout());\n    alert.success(\"Logged out successfully.\");\n  };\n\n  return (\n    <Fragment>\n      <nav className=\"navbar row\">\n        <div className=\"col-12 col-md-3\">\n          <div className=\"navbar-brand\">\n            <Link to=\"/\">\n              <img src=\"./images/shopit_logo.png\" />\n            </Link>\n          </div>\n        </div>\n\n        <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\n          <Route render={({ history }) => <Search history={history} />} />\n        </div>\n\n        <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\n          <Link to=\"/cart\" style={{ textDecoration: \"none\" }}>\n            <span id=\"cart\" className=\"ml-3\">\n              Cart\n            </span>\n            <span className=\"ml-1\" id=\"cart_count\">\n              {cartItems.length}\n            </span>\n          </Link>\n\n          {user ? (\n            <div className=\"ml-4 dropdown d-inline\">\n              <Link\n                to=\"#!\"\n                className=\"btn dropdown-toggle text-white mr-4\"\n                type=\"button\"\n                id=\"dropDownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <figure className=\"avatar avatar-nav\">\n                  <img\n                    src={user.avatar && user.avatar.url}\n                    alt={user && user.name}\n                    className=\"rounded-circle\"\n                  />\n                </figure>\n                <span>{user && user.name}</span>\n              </Link>\n\n              <div\n                className=\"dropdown-menu\"\n                aria-labelledby=\"dropDownMenuButton\"\n              >\n                {user && user.role === \"admin\" && (\n                  <Link className=\"dropdown-item\" to=\"/dashboard\"> Dashboard  </Link>\n                  )}\n                  <Link className=\"dropdown-item\" to=\"/orders/me\"> Orders</Link>\n                <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\n                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>  Logout </Link>\n              </div>\n            </div>\n          ) : (\n            !loading && (\n              <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">\n                Login\n              </Link>\n            )\n          )}\n        </div>\n      </nav>\n    </Fragment>\n  );\n};\n\nexport default Header;\n","/Users/nurovic/GitHub/shop-IT/frontend/src/components/user/UpdateProfile.js",["217"],"import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateProfile, clearErrors, loadUser } from \"../../actions/userActions\";\r\nimport { UPDATE_PROFILE_RESET } from \"../../constants/userConstants\";\r\nconst UpdateProfile = ({history}) => {\r\n\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { user } = useSelector(state => state.auth)\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n\r\n        if (user) {\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n            setAvatarPreview(user.avatar.url)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated) {\r\n            alert.success('user updated successfully')\r\n            dispatch(loadUser())\r\n\r\n            history.push('/me')\r\n            \r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n      const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        const formData = new FormData()\r\n        formData.set('name', name)\r\n        formData.set('email', email)\r\n        formData.set('avatar', avatar)\r\n        dispatch(updateProfile(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        if(e.target.name === 'avatar') {\r\n            const reader = new FileReader()\r\n\r\n            reader.onload = () => {\r\n                if(reader.readyState === 2) {\r\n                    setAvatarPreview(reader.result)\r\n                    setAvatar(reader.result)\r\n                }\r\n            }\r\n            reader.readAsDataURL(e.target.files[0])\r\n        }\r\n    }\r\n  return (\r\n    <Fragment>\r\n        <MetaData title={'Update Profile'} />\r\n        <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input \r\n\t\t\t\t\t\t\t\ttype=\"name\" \r\n\t\t\t\t\t\t\t\tid=\"name_field\" \r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Avatar</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        name='avatar'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept=\"image/*\"\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Choose Avatar\r\n                                </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" \r\n                        disabled={loading ? true : false}\r\n                        >Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UpdateProfile","/Users/nurovic/GitHub/shop-IT/frontend/src/components/user/Profile.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/user/Register.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/Home.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/user/NewPassword.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/order/ListOrders.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/user/Login.js",["218"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Loader from \"../layout/Loader\";\nimport MetaData from \"../layout/MetaData\";\n\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, clearErrors } from \"../../actions/userActions\";\n\nconst Login = ({ history, location}) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { isAuthenticated, error, loading } = useSelector((state) => state.auth);\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push(redirect);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, alert, isAuthenticated, error, history]);\n\n  const submitHandler = (e) => {\n      e.preventDefault()\n      dispatch(login(email, password))\n  }\n  return (\n    <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Login'} />\n\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mb-3\">Login</h1>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password_field\">Password</label>\n                                    <input\n                                        type=\"password\"\n                                        id=\"password_field\"\n                                        className=\"form-control\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                </div>\n\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                >\n                                    LOGIN\n                                </button>\n\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\n                            </form>\n                        </div>\n                    </div>\n\n\n                </Fragment>\n            )}\n        </Fragment>\n  )\n};\n\nexport default Login;\n","/Users/nurovic/GitHub/shop-IT/frontend/src/components/order/OrderDetails.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/cart/Shipping.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/Dashboard.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/cart/ConfirmOrder.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/cart/OrderSuccess.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/user/ForgotPassword.js",["219"],"import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { forgotPassword, clearErrors } from \"../../actions/userActions\";\r\n\r\nconst ForgotPassword = () => {\r\n\r\n\r\n    const [email, setEmail] = useState('')\r\n\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { error, message, loading } = useSelector(state => state.forgotPassword)\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n        if(message) {\r\n            alert.success(message)\r\n        }  \r\n\r\n    }, [dispatch, alert, message])\r\n\r\n      const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        const formData = new FormData()\r\n        formData.set('email', email)\r\n\r\n        dispatch(forgotPassword(formData))\r\n    }\r\n  return (\r\n    <Fragment>\r\n        <MetaData title={'Forgot Password'} />\r\n        <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-3\">Forgot Password</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Enter Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"forgot_password_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                            disabled={loading ? true : false}>\r\n                            Send Email\r\n                    </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword","/Users/nurovic/GitHub/shop-IT/frontend/src/components/cart/Cart.js",["220"],"import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\r\n\r\nconst Cart = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const removeCartItemHandler = (id) => {\r\n        dispatch(removeItemFromCart(id))\r\n    }\r\n\r\n    const increaseQty = (id, quantity, stock) => {\r\n        const newQty = quantity + 1\r\n    \r\n        if(newQty > stock) return\r\n    \r\n        dispatch(addItemToCart(id, newQty))\r\n      }\r\n      \r\n      const decreaseQty = (id, quantity) => {\r\n        const newQty = quantity - 1\r\n    \r\n        if(newQty <= 0) return\r\n    \r\n        dispatch(addItemToCart(id, newQty))\r\n      }\r\n    const checkouthandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    } \r\n    \r\n  return (\r\n    <Fragment>\r\n        <MetaData title={'Your Cart'} />\r\n        {cartItems.length === 0 ? <h2 classNameName='mt-5'> Your Cart is Empty</h2> : (\r\n            <Fragment>\r\n                 <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\r\n        \r\n         <div className=\"row d-flex justify-content-between\">\r\n            <div className=\"col-12 col-lg-8\">\r\n                {cartItems.map(item => (\r\n                    <Fragment>\r\n                        <hr/>\r\n                        <div className=\"cart-item\" key={item.product}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4 col-lg-3\">\r\n                            <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\r\n                        </div>\r\n\r\n                        <div className=\"col-5 col-lg-3\">\r\n                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                            <p id=\"card_item_price\">${item.price}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                            <div className=\"stockCounter d-inline\">\r\n                                <span className=\"btn btn-danger minus\" onClick={\r\n                                    () => decreaseQty(item.product, item.quantity)\r\n                                }>-</span>\r\n                                <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\r\n\r\n\t\t\t\t\t\t\t\t<span className=\"btn btn-primary plus\" onClick={\r\n                                    () => increaseQty(item.product, item.quantity, item.stock)\r\n                                }>+</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                            <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\"\r\n                            onClick={() =>removeCartItemHandler(item.product)}></i>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                    </Fragment>\r\n                ))}\r\n\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3 my-4\">\r\n                <div id=\"order_summary\">\r\n                    <h4>Order Summary</h4>\r\n                    <hr />\r\n                    <p>Subtotal:  <span className=\"order-summary-values\">\r\n                        {cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)}\r\n                        (Units)</span></p>\r\n                    <p>Est. total: <span className=\"order-summary-values\">\r\n                        ${cartItems.reduce((acc, item) => (acc + item.quantity * item.price), 0)}\r\n                        </span></p>\r\n    \r\n                    <hr />\r\n                    <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\"\r\n                    onClick={checkouthandler}>Check out</button>\r\n                </div>\r\n            </div>\r\n         </div>\r\n            </Fragment>\r\n        )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Cart","/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/NewProduct.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/ProcessOrder.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/UpdateProduct.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/cart/Payment.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/ProductsList.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/route/ProtectedRoute.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/UpdateUser.js",["221"],"import React, { Fragment, useEffect, useState } from \"react\";\n\nimport MetaData from \"../layout/MetaData\";\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateUser, getUserDetails, clearErrors } from \"../../actions/userActions\";\nimport { UPDATE_USER_RESET } from \"../../constants/userConstants\";\n\n\nconst UpdateUser = ({history, match}) => {\n  \n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [role, setRole] = useState('')\n\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { error, isUpdated } = useSelector(state => state.user)\n    const { user } = useSelector(state => state.userDetails)\n\n    const userId = match.params.id\n\n    useEffect(() => {\n\n        if (user && user._id !== userId) {\n            dispatch(getUserDetails(userId))\n        } else {\n            setName(user.name)\n            setEmail(user.email)\n            setRole(user.role)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(isUpdated) {\n            alert.success('user updated successfully')\n\n            history.push('/admin/users')\n            \n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n      const submitHandler = (e) => {\n        e.preventDefault()\n\n        const formData = new FormData()\n        formData.set('name', name)\n        formData.set('email', email)\n        formData.set('role', role)\n        dispatch(updateUser(user._id, formData))\n    }\n    return (\n        <Fragment>\n            <MetaData title={`Update User`} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mt-2 mb-5\">Update User</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"name_field\">Name</label>\n                            <input \n\t\t\t\t\t\t\t\ttype=\"name\" \n\t\t\t\t\t\t\t\tid=\"name_field\" \n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                                    <label htmlFor=\"role_field\">Role</label>\n\n                                    <select\n                                        id=\"role_field\"\n                                        className=\"form-control\"\n                                        name='role'\n                                        value={role}\n                                        onChange={(e) => setRole(e.target.value)}\n                                    >\n                                        <option value=\"user\">user</option>\n                                        <option value=\"admin\">admin</option>\n                                    </select>\n                                </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" >Update</button>\n                    </form>\n                </div>\n            </div>\n                </div>\n            </div>\n\n        </Fragment>\n  )\n}\n\nexport default UpdateUser","/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/UsersList.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/reducers/productsReducers.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/reducers/cartReducers.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/reducers/userReducers.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/reducers/orderReducers.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/product/ProductDetails.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/actions/userActions.js",["222"],"import axios from 'axios'\nimport {\n    LOGIN_REQUEST,\n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PASSWORD_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST,\n    NEW_PASSWORD_SUCCESS,\n    ALL_USERS_FAIL,\n    ALL_USERS_REQUEST,\n    ALL_USERS_SUCCESS,\n    UPDATE_USER_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    DELETE_USER_FAIL,\n    DELETE_USER_REQUEST,\n    DELETE_USER_RESET,\n    DELETE_USER_SUCCESS,\n    CLEAR_ERRORS\n} from '../constants/userConstants'\n\nexport const login = ( email, password ) => async (dispatch) => {\n    try {\n        \n        dispatch({ type: LOGIN_REQUEST})\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/login', {email,password}, config)\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: data.user\n        })\n    } catch (error) {\n        dispatch({\n            type: LOGIN_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\nexport const register = ( userData ) => async (dispatch) => {\n    try {\n        dispatch({ type: REGISTER_USER_REQUEST})\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/register', userData, config)\n\n        dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: data.user\n        })\n    } catch (error) {\n        dispatch({\n            type: REGISTER_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\nexport const updateProfile = ( userData ) => async (dispatch) => {\n    try {\n        dispatch({ type: UPDATE_PROFILE_REQUEST})\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.put('/api/v1/me/update', userData, config)\n\n        dispatch({\n            type: UPDATE_PROFILE_SUCCESS,\n            payload: data.success\n        })\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n// Update password\nexport const updatePassword = (passwords) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PASSWORD_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put('/api/v1/password/update', passwords, config)\n\n        dispatch({\n            type: UPDATE_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n// Forgot password\nexport const forgotPassword = (email) => async (dispatch) => {\n    try {\n\n        dispatch({ type: FORGOT_PASSWORD_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/password/forgot', email, config)\n\n        dispatch({\n            type: FORGOT_PASSWORD_SUCCESS,\n            payload: data.message\n        })\n\n    } catch (error) {\n        dispatch({\n            type: FORGOT_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n// Reset password\nexport const resetPassword = (token, passwords) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PASSWORD_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config)\n\n        dispatch({\n            type: NEW_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\nexport const loadUser = () => async (dispatch) => {\n    try {\n        dispatch({ type: LOAD_USER_REQUEST})\n\n        const { data } = await axios.get('/api/v1/me')\n\n        dispatch({\n            type:LOAD_USER_SUCCESS,\n            payload: data.user\n        })\n    } catch (error) {\n        dispatch({\n            type: LOAD_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n// Get all users\nexport const allUsers = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_USERS_REQUEST })\n\n        const { data } = await axios.get('/api/v1/admin/users')\n\n        dispatch({\n            type: ALL_USERS_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_USERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\nexport const logout = () => async (dispatch) => {\n    try {\n        await axios.get('/api/v1/logout')\n\n        dispatch({\n            type:LOGOUT_SUCCESS,\n        })\n    } catch (error) {\n        dispatch({\n            type: LOGOUT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\nexport const updateUser = (id, userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_USER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/user/${id}`, userData, config)\n\n        dispatch({\n            type: UPDATE_USER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\nexport const getUserDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: USER_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/admin/user/${id}`)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\nexport const deleteUser = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_USER_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/admin/user/${id}`)\n\n        dispatch({\n            type: DELETE_USER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/OrdersList.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/layout/MetaData.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/layout/Loader.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/product/product.js",["223"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Product = ({ product, col }) => {\n    return (\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\n            <div className=\"card p-3 rounded\">\n                <img\n                    className=\"card-img-top mx-auto\"\n                    src={product.images[0].url}\n                />\n                <div className=\"card-body d-flex flex-column\">\n                    <h5 className=\"card-title\">\n                        <Link to={`/product/${product._id}`}>{product.name}</Link>\n                    </h5>\n                    <div className=\"ratings mt-auto\">\n                        <div className=\"rating-outer\">\n                            <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\n                        </div>\n                        <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n                    </div>\n                    <p className=\"card-text\">${product.price}</p>\n                    <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Product","/Users/nurovic/GitHub/shop-IT/frontend/src/components/layout/Search.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/actions/productsActions.js",["224","225","226","227","228"],"import axios from 'axios'\n\nimport { \n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_RESET,\n    NEW_REVIEW_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_RESET,\n    NEW_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_RESET,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_RESET,\n    UPDATE_PRODUCT_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS\n} from '../constants/productConstants'\n\nexport const getProducts = (keyword = '', currentPage = 1, price, category, rating = 0) => async (dispatch) => {\n    try {\n        dispatch ({type: ALL_PRODUCTS_REQUEST})\n\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\n\n        if (category) {\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\n        }\n        const { data } = await axios.get(link) \n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch ({type: PRODUCT_DETAILS_REQUEST})\n\n        const { data } = await axios.get(`/api/v1/product/${id}`) \n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data.product\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\nexport const newProduct = (productData) => async (dispatch) => {\n    try {\n        dispatch ({type: NEW_PRODUCT_REQUEST})\n\n        const config = {\n            headers: {\n                'Content-Type' : 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\nexport const updateProduct = (id, productData) => async (dispatch) => {\n    try {\n        dispatch ({type: UPDATE_PRODUCT_REQUEST})\n\n        const config = {\n            headers: {\n                'Content-Type' : 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n        dispatch ({type: NEW_REVIEW_REQUEST})\n\n        const config = {\n            headers: {\n                'Content-Type' : 'application/json'\n            }\n        }\n\n        const { data } = await axios.put('/api/v1/review', reviewData, config)\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.product\n        })\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\nexport const deleteProduct = (id) => async (dispatch) => {\n    try {\n        dispatch ({type: DELETE_PRODUCT_REQUEST})\n\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data.product\n        })\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/admin/products`)\n\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data.products\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_REVIEWS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\nexport const deleteReview = (id, productId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n    } catch (error) {\n\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/Sidebar.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/actions/cartActions.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/cart/CheckoutSteps.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/actions/orderActions.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/constants/userConstants.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/constants/orderConstans.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/constants/productConstants.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/constants/cartConstants.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/review/ListReview.js",[],"/Users/nurovic/GitHub/shop-IT/frontend/src/components/admin/ProductReviews.js",["229"],{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":7,"column":39,"nodeType":"236","messageId":"237","endLine":7,"endColumn":47},{"ruleId":"238","severity":1,"message":"239","line":29,"column":15,"nodeType":"240","endLine":29,"endColumn":53},{"ruleId":"241","severity":1,"message":"242","line":46,"column":8,"nodeType":"243","endLine":46,"endColumn":52,"suggestions":"244"},{"ruleId":"241","severity":1,"message":"245","line":31,"column":6,"nodeType":"243","endLine":31,"endColumn":56,"suggestions":"246"},{"ruleId":"241","severity":1,"message":"247","line":28,"column":8,"nodeType":"243","endLine":28,"endColumn":34,"suggestions":"248"},{"ruleId":"234","severity":1,"message":"249","line":6,"column":10,"nodeType":"236","messageId":"237","endLine":6,"endColumn":18},{"ruleId":"241","severity":1,"message":"250","line":51,"column":8,"nodeType":"243","endLine":51,"endColumn":52,"suggestions":"251"},{"ruleId":"234","severity":1,"message":"252","line":36,"column":5,"nodeType":"236","messageId":"237","endLine":36,"endColumn":22},{"ruleId":"238","severity":1,"message":"239","line":8,"column":17,"nodeType":"240","endLine":11,"endColumn":19},{"ruleId":"234","severity":1,"message":"253","line":15,"column":5,"nodeType":"236","messageId":"237","endLine":15,"endColumn":21},{"ruleId":"234","severity":1,"message":"254","line":19,"column":5,"nodeType":"236","messageId":"237","endLine":19,"endColumn":22},{"ruleId":"234","severity":1,"message":"255","line":23,"column":5,"nodeType":"236","messageId":"237","endLine":23,"endColumn":25},{"ruleId":"234","severity":1,"message":"256","line":27,"column":5,"nodeType":"236","messageId":"237","endLine":27,"endColumn":25},{"ruleId":"234","severity":1,"message":"257","line":34,"column":5,"nodeType":"236","messageId":"237","endLine":34,"endColumn":24},{"ruleId":"234","severity":1,"message":"258","line":5,"column":8,"nodeType":"236","messageId":"237","endLine":5,"endColumn":14},"no-native-reassign",["259"],"no-negated-in-lhs",["260"],"no-unused-vars","'loadUser' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["261"],"React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["262"],"React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array.",["263"],"'useAlert' is defined but never used.","React Hook useEffect has missing dependencies: 'user' and 'userId'. Either include them or remove the dependency array.",["264"],"'DELETE_USER_RESET' is defined but never used.","'NEW_REVIEW_RESET' is defined but never used.","'NEW_PRODUCT_RESET' is defined but never used.","'DELETE_PRODUCT_RESET' is defined but never used.","'UPDATE_PRODUCT_RESET' is defined but never used.","'DELETE_REVIEW_RESET' is defined but never used.","'Loader' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"273","text":"274"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"275","text":"276"},"Update the dependencies array to be: [dispatch, alert, message, error]",{"range":"277","text":"278"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user, userId]",{"range":"279","text":"280"},[1372,1416],"[dispatch, alert, error, history, isUpdated, user]",[872,922],"[dispatch, alert, isAuthenticated, error, history, redirect]",[729,755],"[dispatch, alert, message, error]",[1355,1399],"[dispatch, alert, error, history, isUpdated, user, userId]"]